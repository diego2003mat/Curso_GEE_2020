Map.centerObject(cuenca);
//Visualización NDVI
var visParams_NDVI = {
  bands: ['NDVI'],
  min: -1,
  max: 0,
  opacity:1,
  palette: ["ff3f06","fcff50","36ff29"]
};



function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                 .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}

var dataset_L8 = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
                  .filterDate('2020-08-27T08:00', '2020-08-27T18:00')
                  // Pre-filter to get less cloudy granules.
                  .filter(ee.Filter.lte('CLOUD_COVER',50)) //filtro por porcentaje de nubosidad
                  //.filterBounds(cuenca) // filtro por límite del área del pnc
                  .filter(ee.Filter.eq('WRS_PATH', 10)) // Incorpora el valor de Path
                  .filter(ee.Filter.eq('WRS_ROW', 62)) // Incorpora el valor de Row
                  //.map(function(image){return image.clip(cuenca)}) // recorte por límite del pnc
                  .map(maskL8sr)
                  ;
                  
var visParams_L8 = {
  bands: ['B7', 'B6', 'B4'],
  min: 174,
  max: 3716,
  gamma: 1.4,
};

print(dataset_L8);
Map.addLayer(dataset_L8.median(), visParams_L8,"764 Landsat 2020");

//NDVI PARA AÑO 2020
var nir_2020 = dataset_L8.select('B5').median();
var red_2020 = dataset_L8.select('B4').median();
var ndvi_2020 = nir_2020.subtract(red_2020).divide(nir_2020.add(red_2020)).rename('NDVI');
Map.addLayer(ndvi_2020, visParams_NDVI,"NDVI Landsat 2020",false);


//Landsat 7 2000
var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};

var L7_SR = ee.ImageCollection('LANDSAT/LE07/C01/T1_SR')
                  .filterDate('2001-01-01', '2001-12-31')
                  //.filter(ee.Filter.lte('CLOUD_COVER',50)) //filtro por porcentaje de nubosidad
                  .filter(ee.Filter.eq('WRS_PATH', 10)) // Incorpora el valor de Path
                  .filter(ee.Filter.eq('WRS_ROW', 62)) // Incorpora el valor de Row
                  .map(cloudMaskL457);

var visParams = {
  bands: ['B7', 'B4', 'B2'],
  min: 0,
  max: 3000,
  gamma: 1.4,
};
print(L7_SR);
Map.addLayer(L7_SR.median(), visParams, "Falso color Landsat 7 2001");

//NDVI PARA AÑO 2000
var nir_2000 = L7_SR.select('B5').median();
var red_2000 = L7_SR.select('B4').median();
var ndvi_2000 = nir_2000.subtract(red_2000).divide(nir_2000.add(red_2000)).rename('NDVI');
Map.addLayer(ndvi_2000, visParams_NDVI,"NDVI Landsat 2001",false);

// Composición y contraste RGB de 4 imágenes para un mismo momento
var ComposicionesRGB = {
  '2020 Urbano RGB 4,3,2': ['B4', 'B3', 'B1'],
  '2020 Vegetación RGB 6,5,4': ['B6', 'B5', 'B4']};
  
var ComposicionesRGB_L7 = {
  '2000 Urbano RGB 3,2,1': ['B3', 'B1', 'B1'],
  '2000 Vegetación RGB 7,4,2': ['B7', 'B4', 'B2']};
  
function getVisualization(bands) {
  return {gamma: 1.6, min: 0, max: 5000, bands: bands};}

var PanelMapas = [];

//Creación y linkeo entre mapas 2000
Object.keys(ComposicionesRGB_L7).forEach(function(name) {
  var Mapa = ui.Map();
  Mapa.add(ui.Label(name));
  Mapa.addLayer(L7_SR.median(), getVisualization(ComposicionesRGB_L7[name]), name);
  Mapa.setControlVisibility(false);
  PanelMapas.push(Mapa);});
  
//Creación y linkeo entre mapas 2020

Object.keys(ComposicionesRGB).forEach(function(name) {
  var Mapa = ui.Map();
  Mapa.add(ui.Label(name));
  Mapa.addLayer(dataset_L8.median(), getVisualization(ComposicionesRGB[name]), name);
  Mapa.setControlVisibility(false);
  PanelMapas.push(Mapa);});

  
  
var linker = ui.Map.Linker(PanelMapas);


//Configuración de la posición de los 4 mapas sobre la vista
var mapGrid = ui.Panel([
      ui.Panel([PanelMapas[0]],  null, {stretch: 'both'}),
      ui.Panel([PanelMapas[1]], null, {stretch: 'both'}),
      ui.Panel([PanelMapas[2]], null, {stretch: 'both'}),
      ui.Panel([PanelMapas[3]], null, {stretch: 'both'}),],
      ui.Panel.Layout.Flow('horizontal'), {stretch: 'both'});


// Controladores de título y escala-zoom para el primer mapa
PanelMapas[0].setControlVisibility({zoomControl: true});
PanelMapas[0].setControlVisibility({scaleControl: true});
var Titulo = ui.Label('Analítica de imágenes Landsat L7 2000 - L8 2020 ', {
  stretch: 'horizontal',
  textAlign: 'center',
  fontWeight: 'bold',
  fontSize: '11 px'});


// Centrado del mapa en localización y carga de títulos y mapas en horizontal
PanelMapas[0].centerObject(cuenca);
ui.root.widgets().reset([Titulo, mapGrid]);
ui.root.setLayout(ui.Panel.Layout.Flow('vertical'));
